{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,6DAA6D;AAC7D,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAI9C,MAAM,OAAO,UAAW,SAAQ,SAAS;IAEvC,KAAK,CAAC,WAAW,CAAC,QAAgB,EAAE,QAAgB,EAAE,MAAW;QAC/D,QAAQ;QACN,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC;YAC9B,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,QAAQ,EAAE,MAAM,CAAC,QAAQ;YACzB,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,MAAM,EAAE,MAAM,CAAC,MAAM;SACtB,CAAC,CAAC;QAEH,OAAO,UAAU,CAAC,qBAAqB,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC9D,yBAAyB;QACzB,4CAA4C;QAC5C,sGAAsG;QACtG,aAAa;QACb,sEAAsE;QACtE,MAAM;QACN,KAAK;QACL,0BAA0B;QAC1B,wBAAwB;QACxB,MAAM;QAEV,oBAAoB;QACpB,0BAA0B;QAC1B,IAAI;IACN,CAAC;IAED,KAAK,CAAC,YAAY;QACpB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAA;IAC1B,CAAC;CAEF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n// import type { OktaAuthOptions } from '@okta/okta-auth-js';\nimport { OktaAuth } from '@okta/okta-auth-js';\n\nimport type { OktaIdxPlugin } from './definitions';\n\nexport class OktaIdxWeb extends WebPlugin implements OktaIdxPlugin {\n\n  async fetchTokens(username: string, password: string, config: any): Promise<any> {\n    // try {\n      const authClient = new OktaAuth({\n        issuer: config.issuer,\n        clientId: config.clientId,\n        redirectUri: config.redirectUri,\n        scopes: config.scopes\n      });\n\n      return authClient.signInWithCredentials({ username, password });\n        // .then(transaction => {\n        //   if (transaction.status === 'SUCCESS') {\n        //     authClient.session.setCookieAndRedirect(transaction.sessionToken); // Sets a cookie on redirect\n        //   } else {\n        //     throw 'We cannot handle the ' + transaction.status + ' status';\n        //   }\n        // })\n        // .catch(function (err) {\n        //   console.error(err);\n        // });\n\n    // } catch (error) {\n    //   console.error(error);\n    // }\n  }\n\n  async authenticate(): Promise<void> {\nconsole.log(\"Test Okta IDX\")\n  }\n\n}\n"]}